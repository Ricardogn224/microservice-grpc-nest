# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import lieu_pb2 as proto_dot_lieu_dot_v1alpha_dot_lieu__pb2


class LieuCRUDServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
            '/lieu.v1alpha.LieuCRUDService/Get',
            request_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetRequest.SerializeToString,
            response_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetResponse.FromString,
        )
        self.Add = channel.unary_unary(
            '/lieu.v1alpha.LieuCRUDService/Add',
            request_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddRequest.SerializeToString,
            response_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddResponse.FromString,
        )
        self.Update = channel.unary_unary(
            '/lieu.v1alpha.LieuCRUDService/Update',
            request_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateRequest.SerializeToString,
            response_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateResponse.FromString,
        )
        self.Delete = channel.unary_unary(
            '/lieu.v1alpha.LieuCRUDService/Delete',
            request_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteRequest.SerializeToString,
            response_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteResponse.FromString,
        )


class LieuCRUDServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LieuCRUDServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Get': grpc.unary_unary_rpc_method_handler(
            servicer.Get,
            request_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetRequest.FromString,
            response_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetResponse.SerializeToString,
        ),
        'Add': grpc.unary_unary_rpc_method_handler(
            servicer.Add,
            request_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddRequest.FromString,
            response_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddResponse.SerializeToString,
        ),
        'Update': grpc.unary_unary_rpc_method_handler(
            servicer.Update,
            request_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateRequest.FromString,
            response_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateResponse.SerializeToString,
        ),
        'Delete': grpc.unary_unary_rpc_method_handler(
            servicer.Delete,
            request_deserializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteRequest.FromString,
            response_serializer=proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'lieu.v1alpha.LieuCRUDService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class LieuCRUDService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lieu.v1alpha.LieuCRUDService/Get',
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetRequest.SerializeToString,
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.GetResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lieu.v1alpha.LieuCRUDService/Add',
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddRequest.SerializeToString,
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.AddResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
               target,
               options=(),
               channel_credentials=None,
               call_credentials=None,
               insecure=False,
               compression=None,
               wait_for_ready=None,
               timeout=None,
               metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lieu.v1alpha.LieuCRUDService/Update',
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateRequest.SerializeToString,
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.UpdateResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
               target,
               options=(),
               channel_credentials=None,
               call_credentials=None,
               insecure=False,
               compression=None,
               wait_for_ready=None,
               timeout=None,
               metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lieu.v1alpha.LieuCRUDService/Delete',
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteRequest.SerializeToString,
                                             proto_dot_lieu_dot_v1alpha_dot_lieu__pb2.DeleteResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
