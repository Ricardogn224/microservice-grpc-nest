# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import user_pb2 as proto_dot_user_dot_v1alpha_dot_user__pb2


class UserCRUDServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/Get',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.GetRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.GetResponse.FromString,
                )
        self.Add = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/Add',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.AddRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.AddResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/Update',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/Delete',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteResponse.FromString,
                )
        self.CheckPassword = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/CheckPassword',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordResponse.FromString,
                )
        self.MakeAdmin = channel.unary_unary(
                '/user.v1alpha.UserCRUDService/MakeAdmin',
                request_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminRequest.SerializeToString,
                response_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminResponse.FromString,
                )


class UserCRUDServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserCRUDServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.GetRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.GetResponse.SerializeToString,
            ),
            'Add': grpc.unary_unary_rpc_method_handler(
                    servicer.Add,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.AddRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.AddResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteResponse.SerializeToString,
            ),
            'CheckPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPassword,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordResponse.SerializeToString,
            ),
            'MakeAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeAdmin,
                    request_deserializer=proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminRequest.FromString,
                    response_serializer=proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.v1alpha.UserCRUDService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserCRUDService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/Get',
            proto_dot_user_dot_v1alpha_dot_user__pb2.GetRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/Add',
            proto_dot_user_dot_v1alpha_dot_user__pb2.AddRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.AddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/Update',
            proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/Delete',
            proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/CheckPassword',
            proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.CheckPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.v1alpha.UserCRUDService/MakeAdmin',
            proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminRequest.SerializeToString,
            proto_dot_user_dot_v1alpha_dot_user__pb2.MakeAdminResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
